#
# mihomo (Clash.Meta) 配置文件模板
# 适用于 Sub-Store - 纯规则与策略组定义
# 节点由 Sub-Store 动态提供和筛选
#

# 基础配置
mixed-port: 7890
allow-lan: true
mode: rule
log-level: info
external-controller: '127.0.0.1:9090'
global-ua: "clash-verge/v2.2.0"

# DNS 配置
dns:
  enable: true
  listen: '0.0.0.0:1053'
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - '+.lan'
    - '+.local'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
  default-nameserver: [223.5.5.5, 1.2.4.8]
  nameserver:
    - 'https://cloudflare-dns.com/dns-query'
    - 'https://dns.google/dns-query'
  proxy-server-nameserver:
    - 'https://223.5.5.5/dns-query'
  nameserver-policy:
    'geosite:cn': ['https://223.5.5.5/dns-query']

# 代理组 (Proxy Groups)
# 'PROXY' 是一个占位符，Sub-Store 会将您组合的所有节点放入此组。
proxy-groups:
  - name: '🔰 模式选择'
    type: select
    proxies:
      - '⚙️ 节点选择'
      - '🕊️ 落地节点'
      - '🔗 全局直连'
      - 'DIRECT'

  # ============== 核心分组逻辑 ==============

  # 1. 落地节点组 (第二跳)
  #    - 使用 'filter' 从所有节点(PROXY)中筛选出您标记为“落地”或“家宽”的节点。
  #    - 这些节点需要由 Sub-Store 脚本添加 `dialer-proxy` 属性来实现链式代理。
  - name: '🕊️ 落地节点'
    type: select
    use: [PROXY]
    filter: '(?i)落地|家宽'

  # 2. 中转/出口节点组 (第一跳)
  #    - 使用 'exclude-filter' 排除了所有被标记为落地节点的节点，防止代理循环。
  - name: '⚙️ 节点选择'
    type: select
    use: [PROXY]
    exclude-filter: '(?i)落地|家宽'
    proxies:
      - '♻️ 延迟选优'
      - '🚑 故障转移'
      - '⚖️ 负载均衡(散列)'
      - '☁️ 负载均衡(轮询)'

  - name: '♻️ 延迟选优'
    type: url-test
    url: 'https://www.google.com/generate_204'
    interval: 3600
    lazy: true
    use: [PROXY]
    exclude-filter: '(?i)落地|家宽'

  - name: '🚑 故障转移'
    type: fallback
    url: 'https://www.google.com/generate_204'
    interval: 3600
    lazy: true
    use: [PROXY]
    exclude-filter: '(?i)落地|家宽'

  - name: '⚖️ 负载均衡(散列)'
    type: load-balance
    strategy: consistent-hashing
    url: 'https://www.google.com/generate_204'
    interval: 3600
    lazy: true
    use: [PROXY]
    exclude-filter: '(?i)落地|家宽'

  - name: '☁️ 负载均衡(轮询)'
    type: load-balance
    strategy: round-robin
    url: 'https://www.google.com/generate_204'
    interval: 3600
    lazy: true
    use: [PROXY]
    exclude-filter: '(?i)落地|家宽'

  # --- 其他分流策略组 (均已包含'🕊️ 落地节点'选项) ---
  - name: '🐟 漏网之鱼'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '💸 ChatGPT-Gemini-XAI-Perplexity'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '💵 Claude'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '🪙 Bybit'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '🅿️ PikPak'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '📲 电报消息'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '📢 谷歌服务'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '🍎 苹果服务'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: 'Ⓜ️ 微软服务'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']
  - name: '🥰 广告过滤'
    type: select
    proxies: [REJECT, DIRECT]
  - name: '🔗 全局直连'
    type: select
    proxies: [DIRECT, '🔰 模式选择']
  - name: '🐬 自定义直连'
    type: select
    proxies: ['🔗 全局直连', '🔰 模式选择']
  - name: '🐳 自定义代理'
    type: select
    proxies: ['🔰 模式选择', '⚙️ 节点选择', '🕊️ 落地节点', '🔗 全局直连']

# 规则集 (Rule Providers) - (保持不变)
rule-providers:
  reject: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt", path: ./ruleset/reject.yaml, interval: 86400 }
  icloud: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt", path: ./ruleset/icloud.yaml, interval: 86400 }
  apple: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt", path: ./ruleset/apple.yaml, interval: 86400 }
  google: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt", path: ./ruleset/google.yaml, interval: 86400 }
  proxy: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt", path: ./ruleset/proxy.yaml, interval: 86400 }
  direct: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt", path: ./ruleset/direct.yaml, interval: 86400 }
  private: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt", path: ./ruleset/private.yaml, interval: 86400 }
  gfw: { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt", path: ./ruleset/gfw.yaml, interval: 86400 }
  'tld-not-cn': { type: http, behavior: domain, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt", path: ./ruleset/tld-not-cn.yaml, interval: 86400 }
  telegramcidr: { type: http, behavior: ipcidr, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt", path: ./ruleset/telegramcidr.yaml, interval: 86400 }
  cncidr: { type: http, behavior: ipcidr, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt", path: ./ruleset/cncidr.yaml, interval: 86400 }
  lancidr: { type: http, behavior: ipcidr, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt", path: ./ruleset/lancidr.yaml, interval: 86400 }
  applications: { type: http, behavior: classical, url: "https://fastly.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt", path: ./ruleset/applications.yaml, interval: 86400 }
  openai: { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/openai.yaml", path: ./ruleset/openai.yaml, interval: 86400 }
  bybit: { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/bybit.yaml", path: ./ruleset/bybit.yaml, interval: 86400 }
  pikpak: { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/pikpak.yaml", path: ./ruleset/pikpak.yaml, interval: 86400 }
  anthropic: { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/anthropic.yaml", path: ./ruleset/anthropic.yaml, interval: 86400 }
  'google-gemini': { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/google-gemini.yaml", path: ./ruleset/google-gemini.yaml, interval: 86400 }
  xai: { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/xai.yaml", path: ./ruleset/xai.yaml, interval: 86400 }
  perplexity: { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/perplexity.yaml", path: ./ruleset/perplexity.yaml, interval: 86400 }
  microsoft: { type: http, behavior: classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/classical/microsoft.yaml", path: ./ruleset/microsoft.yaml, interval: 86400 }

# 规则 (Rules) - (保持不变)
rules:
  - 'PROCESS-NAME,steam.exe,🐬 自定义直连'
  - 'DOMAIN-SUFFIX,immersivetranslate.com,🐳 自定义代理'
  - 'DOMAIN-SUFFIX,googleapis.cn,🔰 模式选择'
  - 'DOMAIN-SUFFIX,gstatic.com,🔰 模式选择'
  - 'DOMAIN-SUFFIX,xn--ngstr-lra8j.com,🔰 模式选择'
  - 'DOMAIN-SUFFIX,github.io,🔰 模式选择'
  - 'DOMAIN,v2rayse.com,🔰 模式选择'
  - 'RULE-SET,openai,💸 ChatGPT-Gemini-XAI-Perplexity'
  - 'RULE-SET,pikpak,🅿️ PikPak'
  - 'RULE-SET,bybit,🪙 Bybit'
  - 'RULE-SET,anthropic,💵 Claude'
  - 'RULE-SET,google-gemini,💸 ChatGPT-Gemini-XAI-Perplexity'
  - 'RULE-SET,xai,💸 ChatGPT-Gemini-XAI-Perplexity'
  - 'RULE-SET,perplexity,💸 ChatGPT-Gemini-XAI-Perplexity'
  - 'RULE-SET,applications,🔗 全局直连'
  - 'RULE-SET,private,🔗 全局直连'
  - 'RULE-SET,reject,🥰 广告过滤'
  - 'RULE-SET,microsoft,Ⓜ️ 微软服务'
  - 'RULE-SET,icloud,🍎 苹果服务'
  - 'RULE-SET,apple,🍎 苹果服务'
  - 'RULE-SET,google,📢 谷歌服务'
  - 'RULE-SET,proxy,🔰 模式选择'
  - 'RULE-SET,gfw,🔰 模式选择'
  - 'RULE-SET,tld-not-cn,🔰 模式选择'
  - 'RULE-SET,direct,🔗 全局直连'
  - 'RULE-SET,lancidr,🔗 全局直连,no-resolve'
  - 'RULE-SET,cncidr,🔗 全局直连,no-resolve'
  - 'RULE-SET,telegramcidr,📲 电报消息,no-resolve'
  - 'GEOIP,LAN,🔗 全局直连,no-resolve'
  - 'GEOIP,CN,🔗 全局直连,no-resolve'
  - 'MATCH,🐟 漏网之鱼'
